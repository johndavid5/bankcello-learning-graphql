{
  totalPhotos
}

mutation newPhoto {
  postPhoto(name: "sample photo")
}

# <name and description>
mutation newPhoto {
  postPhoto(name: "matrix-says-goodbye-to-bennett", description: "\"Let off some steam, Bennett!\"")
}
# </name and description>

# <Using Query Variables>
Query String:
mutation newPhoto($name: String!, $description: String) {
  postPhoto(name: $name, description: $description)
}

Query Variables:
{
    "name": "matrix-says-goodbye-to-bennett",
    "description": "\"Let off some steam, Bennett!\""
}
# </Using Query Variables>

# <5-3-Type Resolvers>
# <Add selection set to our mutation>
mutation newPhoto($name: String!, $description: String ){
    postPhoto(name: $name, description: $description){
        id
        name
        description
    }
}

# NOTE: You'll get an error if you don't supply
# the selection set...

# Without Query Variables...
mutation newPhoto{
    postPhoto(name: "Joe-1", description: "Joe-1 Photo!"){
        id
        name
        description
    }
}
# </Add selection set to our mutation>

# <Add selection set to allPhotos query>
query listPhotos {
   allPhotos { 
      id
      name
      description
   }
}
# </Add selection set to allPhotos query>

# <Add url to selection set for allPhotos query>
query listPhotos {
   allPhotos { 
      id
      name
      description
      url
   }
}
# </Add selection set to allPhotos query>
# </5-3-Type Resolvers>

# <5-4-Inputs-and-Enums>
mutation newPhoto($input: PostPhotoInput!){
    postPhoto(input:$input){
        id
        name
        url
        description
        category
    }
}

Query Variables: 
{
    "input": {
        "name": "Bennett-A",
        "description": "Photo Bennett-A"  
    }
}

# Without Query Variables:
mutation newPhoto{
postPhoto(input:{ name: "Bennett-A", description: "Photo Bennett-A"} ){
        id
        name
        url
        description
        category
    }
}

# With category...
mutation newPhoto{
postPhoto(input:{ category: ACTION, name: "Bennett-B", description: "\"Let off some steam, Bennett!\""} ){
        id
        name
        url
        description
        category
    }
}

# With bad category...
# OUTPUT: "message": "Expected type PhotoCategory, found ZLORP."
mutation newPhoto{
postPhoto(input:{ category: ZLORP, name: "Bennett-B", description: "\"Let off some steam, Bennett!\""} ){
        id
        name
        url
        description
        category
    }
}

# </5-4-Inputs-and-Enums>

# <5-5-one-to-many-connections>
query photos {
    allPhotos {
        name
        url
        postedBy {
            name
        }
    }
}
# </5-5-one-to-many-connections>

# <5-6-many-to-many-connections>
query listPhotos {
    allPhotos {
        url
        taggedUsers {
            name
        }
    }
}
# </5-6-many-to-many-connections>
